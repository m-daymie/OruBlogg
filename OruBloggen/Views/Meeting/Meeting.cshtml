@model OruBloggen.Models.MeetingModel

@{
    ViewBag.Title = "Meeting";
}

<h2>Meeting</h2>


@using (Html.BeginForm("CreateMeeting", "Meeting", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>MeetingModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.MeetingTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MeetingTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MeetingTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MeetingDesc, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MeetingDesc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MeetingDesc, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MeetingStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MeetingStartDate, "{0:yyyy-MM-ddThh:mm:ss}", new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
            @Html.ValidationMessageFor(model => model.MeetingStartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MeetingEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MeetingEndDate, "{0:yyyy-MM-ddThh:mm:ss}", new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
            @Html.ValidationMessageFor(model => model.MeetingEndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Users", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ListBox("Users", ViewData["Users"] as List<SelectListItem>, new { @class = "form-control", id = "usersLb" })
            <input class="btn btn-default" type="button" name="+" id="add" value="+" />
            <input class="btn btn-default" type="button" name="-" id="remove" value="-" />
        </div>
    </div>
    
    <div class="form-group">
        @Html.Label("Users", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ListBox("SelectedUsers", ViewData["SelectedUsers"] as List<SelectListItem>, new { @class = "form-control", id = "selectedUsersLb" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

@section Scripts {
<script>
    $(function () {
        $(document)
            .on("click", "#add", function () {
                $("#usersLb :selected").remove().appendTo("#selectedUsersLb");
                var selected = $("usersLb :selected").text();
                $.post("SelectedUserList", "Meeting", selected);
            })
            .on("click", "#remove", function () {
                $("#selectedUsersLb :selected").remove().appendTo("#usersLb");
            });
    });
</script>

    @Scripts.Render("~/bundles/jqueryval")
}
